Plasticology Application Blue Print 21-7-2025

Sheet: MCQBooks 
( where the code finds his needed books to present to the user in Library Button )
UniqueID, Book, Description, Link, icon
Book : is the Book Name to Show
Description : is the Book Description
Link : is the Book Link 
icon : is the Book Image link 

Sheet: Lectures Topics 
( where the Code finds the needed lectures organised by chapters ) and special mocks
UniqueID, Chapter, LectureName, LectureURL, Mock Name, Mock Link, ChapterIcon

Sheet: MCQ Bank 
( where the code can find the Main MCQ Bank source organised chapter wise and source wise )
UniqueID, Chapter, Question, Hint, CorrectAnswer, IncorrectAnswer1, IncorrectAnswer2, IncorrectAnswer3, CorrectRationale, IncorrectRationale1, IncorrectRationale2, IncorrectRationale3, Source, ImageURL, AudioURL

Sheet: FreeTestMCQs
( where the code can find the Free MCQ Bank source organised chapter wise and source wise )
UniqueID, Chapter, Question, Hint, CorrectAnswer, IncorrectAnswer1, IncorrectAnswer2, IncorrectAnswer3, CorrectRationale, IncorrectRationale1, IncorrectRationale2, IncorrectRationale3, Source, ImageURL, AudioURL
—---------
Sheet : OSCE_Cases
( where the code can find the OSCE images source organised chapter wise and source wise )
Columns :
CaseID,Title,ImageURL,Hint,CaseDescription,AudioURL
Sheet : OSCE_Questions
( where the code can find the OSCE Questions linked to the case ID  source in the Sheet : OSCE_Cases : organised chapter wise and source wise )
Columns :
QuestionID,CaseID,QuestionType,QuestionText,CorrectAnswer,IncorrectAnswer1,IncorrectAnswer2,IncorrectAnswer3,CorrectRationale,IncorrectRationale1,IncorrectRationale2,IncorrectRationale3,EssayModelAnswer,Source,ImageURL,AudioURL
ٍSheet : OSCELog
Timestamp,UserID,UserName,EventType,OSCETitle,Score,TotalQuestions,Details,OSCELogID




Sheet: LectureLogs
(Where the code can record and present the users ( Lectures Topics) sheet Logs used in our app )
Timestamp, UserID, UserName, EventType, LectureName,LectueLogID

Sheet: Users
( the sheet from which we add the users and their activities ) 
UniqueID,Name,Username,Password,Role,UserIMG,AccessGranted,AdditionTimeStamp,CourseChosen,SubscriptionDuration,SubscriptionEndDate,StudyType,E-Mail,MobileNumber,Country,ExamDate,AdminNotes,Exam Results,Payment,PaymentMethod



Sheet: UserLectureNotes
( Where the code can find the notes the user assign to his lectures )
UniqueID, Timestamp, UserID, LectureID, NoteText

Sheet: UserQuizNotes
( Where the code can find the notes the user assign to his Quiz )
UniqueID, Timestamp, UserID, QuizID, NoteText

Sheet: QuizLogs
(Where the code can record and present the users Quizes generated by the user used in our app )
Timestamp, UserID, UserName, EventType, QuizTitle, Score, TotalQuestions, Details,QuizLogID
تصميم شيت بنك الأخطاء (UserIncorrectQuestions) - نسخة مطورة
هذا التصميم المحدث يحول الشيت من مجرد قائمة بالأخطاء إلى سجل تحليلي لتتبع أداء المستخدم مع الأسئلة الصعبة.
محتويات (عواميد) الشيت:
اسم العمود
وظيفته والبيانات التي يحتويها
مثال
UniqueID
المعرف الفريد للصف: (UserID + QuestionID). يضمن عدم تكرار نفس السؤال لنفس المستخدم.
User123_Q55
UserID
معرف المستخدم: لربط الخطأ بصاحبه.
User123
QuestionID
معرف السؤال: لربط الخطأ بالسؤال الأصلي في MCQ Bank.
Q55
UserAnswer
إجابة المستخدم الخاطئة: يسجل آخر إجابة خاطئة اختارها المستخدم. هذا يساعده على فهم نمط أخطائه.
Answer B
WrongCount
عداد الأخطاء: يسجل عدد المرات التي أخطأ فيها المستخدم في هذا السؤال. يزداد هذا الرقم في كل مرة يخطئ فيها.
3


CorrectTimestamp
توقيت الإجابة الصحيحة: يكون فارغاً طالما أن المستخدم لم يجب على السؤال بشكل صحيح. عند الإجابة الصحيحة، يتم تسجيل تاريخ ووقت الإجابة هنا.
30/07/2025 11:00:00
LastUpdate
آخر تحديث: يسجل تاريخ ووقت آخر مرة تم فيها تعديل هذا الصف (سواء بخطأ جديد أو بإجابة صحيحة).
30/07/2025 11:00:00

كيف سيعمل النظام بهذا التصميم المطور؟
عندما يخطئ المستخدم في سؤال:
لأول مرة: يتم إضافة صف جديد، ويتم تسجيل إجابته الخاطئة، ووضع 1 في WrongCount.
لمرة متكررة: يتم البحث عن الصف الموجود بالفعل، ويتم تحديثه بزيادة WrongCount بمقدار 1، وتحديث UserAnswer و LastUpdate.
عندما يتدرب المستخدم على أخطائه ويجيب على سؤال بشكل صحيح:
يتم البحث عن الصف الخاص بهذا السؤال.
لا يتم حذفه، بل يتم تسجيل تاريخ ووقت الإجابة الصحيحة في عمود CorrectTimestamp.
عند إنشاء اختبار "تدرب على أخطائك":
سيقوم التطبيق بطلب كل الأسئلة الخاصة بالمستخدم والتي يكون عمود CorrectTimestamp فيها فارغاً.
هذا التصميم يعطينا رؤية كاملة عن أداء المستخدم ويسمح لنا بتطوير ميزات ذكية جداً في المستقبل.


Sheet : Announcements
Where we can add new messages to the users to give feedback on updates and hints
UniqueID,TimeStamp,UpdateMessage,IsActive


Sheet: Messenger
( where the code can find the messages by the users to the creator and their reply )
Timestamp, UserID, UserName, UserMessage, AdminReply,AdminReplyTimeStamp

Sheet: Sheet Links
(No columns found — possibly empty or metadata only)

Sheet: Role
Columns : Unique_ID, Role, Lectures, MCQBank, LerningMode, OSCEBank, LeadersBoard, Radio, Library					
According to the Role Assigned each column item in the row if TRUE will be active for it if FALSE will be only to see without active link to open he can only see the window but no links active if FALSE										

Sheet: Chapters Names
Quiz Topics



ضيفنا Users_Card
1. فكرة الصور الرمزية (Avatars)
اختيار مصدر الصور: تم الاعتماد على موقع DiceBear لأنه يتيح إنشاء عدد لا نهائي من الصور الرمزية بأساليب متنوعة (احترافية، كرتونية، بسيطة).


تجهيز مكتبة صور: تم إعداد 20 صورة رمزية مسبقًا لتناسب جميع الأذواق.



2. بطاقة التعريف (Profile Card)
عرض البيانات: البطاقة ستعرض بيانات المستخدم من شيت Users_Card (الاسم، اللقب، تاريخ الامتحان، النقاط، الصورة الرمزية).


خاصية التعديل:


تعديل الـ Nickname.


تحديد تاريخ الامتحان من خلال تقويم.


اختيار صورة رمزية من المكتبة.


العد التنازلي للامتحان: إذا حدد المستخدم تاريخ امتحانه، البطاقة ستعرض عد تنازلي بالأيام المتبقية.



3. الأعمدة في شيت Users_Card
pgsql
CopyEdit
UniqueID, Name, Nickname, ExamDate, Age, StudyType, QuizScore, User_Img


4. خطوات التنفيذ
Backend (Google Apps Script)


ربط الكود بشيت Users_Card.


إنشاء صف جديد تلقائيًا للمستخدم إذا لم يكن موجودًا.


حساب وحفظ مجموع النقاط (QuizScore) من QuizLogs وتحديثه تلقائيًا.


استقبال التعديلات من الواجهة الأمامية (Nickname، ExamDate، Avatar) وتحديثها في الشيت.


Frontend (HTML/JS)


تصميم نافذة البطاقة لتظهر عند الضغط على اسم المستخدم.


عرض الصورة الرمزية، الاسم، اللقب، النقاط، والعد التنازلي.


توفير أزرار وخيارات لتعديل البيانات وحفظها.
—---------------------------------
خريطة عمل ميزة: مُنظم المذاكرة (Study Planner)
1. الهدف الأساسي
تحويل التطبيق إلى مساعد دراسي شخصي وتفاعلي، يمكّن المستخدم من وضع خطة دراسية مرنة بناءً على عدد الأيام المتبقية لامتحانه، مع دمج توصيات ذكية من التطبيق بناءً على أدائه الفعلي.
2. الشيت الجديد المطلوب
لتخزين خطة كل مستخدم، سنقوم بإنشاء شيت جديد واحد فقط بالتفاصيل التالية:
اسم الشيت: Study_Planner
الأعمدة المطلوبة:
اسم العمود
الوظيفة
ملاحظات فنية
User_ID
لربط الخطة بصاحبها.
سيتم استخدام نفس UniqueID من شيت Users.
Study_Plan
لتخزين الخطة الكاملة للمستخدم.
سيتم تخزين كل تفاصيل الجدول (الأيام، المهام، حالة الإنجاز) كنص واحد بصيغة JSON لضمان المرونة والقوة.


Column : Plan_TimeStamp
To record the time created
Column : Plan_ID
Unique ID for the plan created / modified
Column : PlanStatus
If Marked TRUE = Active 
If Marked False = Inactive

3. رحلة المستخدم (كيف ستعمل الميزة)
الإعداد الأولي:
عند دخول المستخدم لأول مرة، يسأله التطبيق عن عدد الأيام المتبقية للامتحان (مع اقتراح العدد تلقائياً إذا كان تاريخ الامتحان مسجلاً).
إنشاء الخطة المبدئية:
يقوم التطبيق بتوزيع إجمالي المحاضرات والفصول بشكل متساوٍ على عدد الأيام المتاحة كخطة أولية مقترحة.
الواجهة التفاعلية:
تُعرض الخطة في شاشة جديدة على شكل جدول مقسم بالأيام.
يستطيع المستخدم السحب والإفلات لتغيير ترتيب المهام بين الأيام.
يستطيع المستخدم التعديل المباشر على مهام أي يوم (زيادة أو تقليل عدد الأسئلة مثلاً).
يستطيع المستخدم إضافة مهام خاصة (مثل "يوم راحة").
التكامل مع الذكاء الاصطناعي:
تظهر أيقونات تنبيه (⚠️) بجانب الفصول التي تمثل نقاط ضعف للمستخدم.
يقدم التطبيق اقتراحات ذكية لإضافة مهام مراجعة لهذه الفصول.
متابعة التقدم:
تلقائياً: عند مشاهدة محاضرة أو إنهاء اختبار، يقوم التطبيق بقراءة ذلك من LectureLogs و QuizLogs ويضع علامة (✅) على المهمة المقابلة لها في الخطة.
يدوياً: يمكن للمستخدم وضع علامة (✅) بنفسه على أي مهمة لإعطائه تحكماً كاملاً.
الحفظ:
يتم حفظ أي تغيير يجريه المستخدم على خطته تلقائياً في شيت Study_Planner.
بهذه الخريطة، نكون قد أكدنا على كل التفاصيل. هل هذا التصور النهائي يرضيك لنبدأ في التفكير بالخطوات البرمجية؟

